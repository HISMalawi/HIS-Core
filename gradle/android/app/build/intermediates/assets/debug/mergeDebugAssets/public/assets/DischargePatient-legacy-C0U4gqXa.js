System.register(["./HisStandardForm-legacy-lb9UNuD1.js","./index-legacy-C7ieadqO.js","./commons-legacy-BNo_7UPp.js","./useEncounter-legacy-DBBHQI7p.js","./isEmpty-legacy-50f1ClWs.js","./encounter_guidelines-legacy-BmzlU4Vp.js","./GuidelineEngine-legacy-KsvQuFdF.js"],(function(e,t){"use strict";var a,i,n,l,o,r,s,c,u,d,f,m,y,g,p,b,h,v,T,w;return{setters:[e=>{a=e.H},e=>{i=e.bo,n=e.d,l=e.j,o=e.K,r=e.V,s=e.bv,c=e.L,u=e.e,d=e.Q,f=e.U,m=e.o,y=e.c,g=e.w,p=e.m,b=e.u,h=e.E,v=e.ap},e=>{T=e.r},e=>{w=e.u},null,null,null],execute:function(){class t extends i{constructor(e,t){super(e,114,t)}}class D extends i{constructor(e,t){super(e,40,t)}}e("default",n({__name:"DischargePatient",setup(e){let i,n;const E=l([]),{goToNextTask:S,patientDashboardUrl:_}=w(((e,a)=>{n=new D(a,e),i=new t(a,e),E.value=[{id:"outcome_status",helpText:"Select Discharge Outcome",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({tag:"outcome",obs:n.buildValueCoded("outcome",e.value)}),options:()=>[{label:"Referred (Within the Facility)",value:"Patient transferred internally"},{label:"Dead",value:"Died in treatment"},{label:"Abscorded",value:"Absconded"},{label:"Alive (Discharged home)",value:"Discharged home"},{label:"Transferred (Another health facility)",value:"Discharged to another facility"}]},{id:"facility_name",helpText:"Select Facility name",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({tag:"referral",obs:i.buildValueText("Referred",e.label)}),condition:e=>"Discharged to another facility"===e.outcome_status.value,options:(e,t="")=>s(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}},{id:"internal_sections",helpText:"Select Ward/internal section",type:o.TT_SELECT,validation:e=>r.required(e),computedValue:e=>({tag:"referral",obs:i.buildValueText("Specialist clinic",e.label)}),condition:e=>"Patient transferred internally"===e.outcome_status.value,options:()=>c.getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,t,a)=>{if("string"!=typeof a.filter||a.filter.length<3)return u("Please enter a valid section name");if(a.filtered.some((e=>e.label.toLowerCase()===a.filter.toLowerCase())))return u("Section already existing");if(await d("Do you want to add internal section?")){const e=await c.createInternalSection(a.filter.toUpperCase());e?(a.filter=e.name,a.listData=[{label:e.name,value:e.id},...a.listData]):f(`Unable to add ${a.filter}`)}}}]}}]}));async function x(e,t){await n.createEncounter();const a=await T({...t},"outcome");await n.saveObservationList(a);const l=await T({...t},"referral");v.isEmpty(l)||(await i.createEncounter(),await i.saveObservationList(l)),S()}return(e,t)=>(m(),y(b(h),null,{default:g((()=>[p(a,{cancelDestinationPath:b(_),fields:E.value,onFinishAction:x,skipSummary:""},null,8,["cancelDestinationPath","fields"])])),_:1}))}}))}}}));
