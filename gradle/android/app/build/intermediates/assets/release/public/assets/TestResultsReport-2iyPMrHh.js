import{L as u}from"./lab_report_service-KPhGBjaV.js";import{_ as g}from"./ReportMixin.vue_vue_type_script_lang-UyVeV_GP.js";import{R as f}from"./TableReportTemplate-U5DCp6tC.js";import{d as T,L as e,cx as d,_ as v,r as R,o as b,c as _}from"./index-ru8RXlaa.js";import{F as h}from"./dynamic-import-helper-9HnG3Mif.js";import"./MultiFieldDateHelper-5DHelb14.js";import"./KbLayouts-9dqmDWmG.js";import"./HisKbConfigurations-a7K7dizM.js";import"./BasicReportTemplate-eOGMNgtD.js";import"./Export-jNK5-P5e.js";import"./SIngleTouchField-Vfu2y1a0.js";import"./Pagination-6U7NhsmN.js";import"./HisStandardForm-NL7Pv0Lm.js";import"./TouchScreenForm-QVpoxsVO.js";import"./ToolbarMediumCard-Mlzu3SIO.js";import"./Transformers-XlEF3tgP.js";import"./ViewPort-LUNlto_Q.js";import"./ReportErrors-ArLMvFHk.js";const y=T({mixins:[g],components:{ReportTemplate:f},data:()=>({title:"Lab test result(s)",rows:[],cohort:[],reportType:"",reportReady:!1,columns:[],patientLevelColumns:[[e.thTxt("ARV#"),e.thTxt("Gender"),e.thTxt("Birthdate"),e.thTxt("Ordered"),e.thTxt("Specimen"),e.thTxt("Test"),e.thTxt("Result"),e.thTxt("Released")]],disaggregatedColumns:[e.thTxt("Age group"),e.thTxt("Gender")]}),created(){this.report=new u,this.fields=this.getFormFields()},methods:{async onPeriod({type:r,tests:o}){this.reportReady=!0,this.rows=[],this.period=this.report.getDateIntervalPeriod(),this.reportType=r.value,this.reportType==="disaggregated"?this.setDisaggregatedRows(o):this.reportType==="patient_level"&&this.setPatientLevelRows(o)},getFormFields(){return[...this.getDateDurationFields(),{id:"tests",helpText:"Available test(s) results",type:h.TT_MULTIPLE_SELECT,options:async(r,o,t)=>{this.report.setStartDate(t.start_date),this.report.setEndDate(t.end_date);const s=await this.report.getLabResultsReport(),i=this.buildAvailableTests(s);return this.buildAvailableTestOptions(i)}},{id:"type",helpText:"Select report type",type:h.TT_SELECT,options:()=>[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}]}]},buildAvailableTests(r){const o={};return this.sortByArvNumber(r).forEach(t=>{t.measures.forEach(s=>{s.name in o||(o[s.name]=[]),o[s.name].push({id:t.patient_id,arv:t.arv_number,gender:t.gender,ageGroup:t.age_group,birthdate:this.toDate(t.birthdate),ordered:this.toDate(t.order_date),specimen:t.test,test:s.name,result:"".concat(s.modifier," ").concat(s.value),released:this.toDate(t.result_date)})})}),o},buildAvailableTestOptions(r){const o=[];for(const t in r){const s=r[t];o.push({label:t,value:s.length,other:s})}return o},setDisaggregatedRows(r){const o=[],t=[];this.columns=[this.disaggregatedColumns.concat(r.map(s=>e.thTxt(s.label)))];for(const s in d){const i=d[s],p=[e.td(i),e.td("M")],a=[e.td(i),e.td("F")];r.forEach(({other:m})=>{const l=c=>m.filter(n=>n.gender===c&&n.ageGroup===i).map(n=>n.id);p.push(this.drill(l("M"))),a.push(this.drill(l("F")))}),o.push(p),t.push(a),this.rows=[...t,...o]}},setPatientLevelRows(r){this.columns=this.patientLevelColumns,r.forEach(({other:o})=>{o.forEach(t=>{this.rows.push([this.tdARV(t.arv),e.td(t.gender),e.tdDate(t.birthdate),e.tdDate(t.ordered),e.td(t.specimen),e.td(t.test),e.td(t.result),e.tdDate(t.released)])})})}}});function w(r,o,t,s,i,p){const a=R("report-template");return b(),_(a,{title:r.title,period:r.period,rows:r.rows,fields:r.fields,columns:r.columns,canExportCsv:!0,canExportPDf:!0,reportReady:r.reportReady,onReportConfiguration:r.onPeriod},null,8,["title","period","rows","fields","columns","reportReady","onReportConfiguration"])}const N=v(y,[["render",w]]);export{N as default};
