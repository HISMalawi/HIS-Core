import{F as o}from"./dynamic-import-helper-9HnG3Mif.js";import{H as n}from"./HisStandardForm-NL7Pv0Lm.js";import{b2 as a,d as r,V as c,_ as d,r as p,o as l,c as m}from"./index-ru8RXlaa.js";import{_ as h}from"./EncounterMixin.vue_vue_type_script_lang-SPERpwts.js";import"./TouchScreenForm-QVpoxsVO.js";import"./ToolbarMediumCard-Mlzu3SIO.js";import"./Transformers-XlEF3tgP.js";import"./ViewPort-LUNlto_Q.js";import"./encounter_guidelines-o2Ohhd7F.js";import"./GuidelineEngine-syyQoOzo.js";class f extends a{constructor(t,i){super(t,105,i)}}const u=r({mixins:[h],components:{HisStandardForm:n},data:()=>({service:{}}),watch:{ready:{async handler(e){e&&(this.service=new f(this.patientID,this.providerID),this.fields=[this.notesField()])},immediate:!0}},methods:{async onFinish(e,t){await this.service.createEncounter(),await this.service.saveObservationList(await this.resolveObs(t)),this.nextTask()},notesField(){return{id:"noted",helpText:"Clinical Notes",type:o.TT_NOTE,validation:e=>c.required(e),computedValue:e=>({obs:this.service.buildValueText("Notes",e.value)})}}}});function _(e,t,i,v,F,T){const s=p("his-standard-form");return l(),m(s,{fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}const C=d(u,[["render",_]]);export{C as default};
