{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/OPD/views/encounters/radiology.vue"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","_","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","radiologyService","isPacsEnabled","previousRadiologyExaminations","watch","ready","isReady","this","PatientRadiologyService","patientID","providerID","OPD_GLOBAL_PROP","isPACsEnabled","showPreviousRadiolgy","patient","getFields","immediate","deep","methods","computedData","Promise","all","radiology","createEncounter","obsObj","savedObsData","saveObservationList","printOrders","submitToPacs","error","console","log","gotoPatientDashboard","params","getPreviousRadiologyExaminations","url","columns","rows","order","row","children","accession_number","value_text","moment","obs_datetime","format","push","label","value","other","id","helpText","condition","type","FieldType","TT_TABLE_VIEWER","options","d","getTableData","config","hiddenFooterBtns","TT_RADIOLOGY_PICKER","validation","Validation","required","disableBackBtn","computedValue","map","async","buildValueCoded","option","parent","child","buildValueCodedFromConceptId","concept_id","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,qBAAS,IAAM,CACtBC,yBAAaP,EAA8B,CACzCQ,sBAAuBd,EAAKe,kBAC5BC,OAAQhB,EAAKgB,OACbC,eAAgBjB,EAAKkB,UACpB,KAAM,EAAG,CAAC,wBAAyB,SAAU,qBAElDC,EAAG,I,iGCHQC,+BAAgB,CAC7BC,WAAY,CAAEC,wBACdC,OAAQ,CAACC,QACTC,KAAM,KAAM,CACVC,iBAAkB,GAClBC,eAAe,EACfC,8BAA+B,KAEjCC,MAAO,CACLC,MAAO,CACL,cAAcC,GACTA,IACDC,KAAKN,iBAAmB,IAAIO,OAAwBD,KAAKE,UAAWF,KAAKG,YACzEH,KAAKL,oBAAuBS,OAAgBC,gBAC5CL,KAAKJ,oCAAsCI,KAAKN,iBAAiBY,qBAAqBN,KAAKO,SAC3FP,KAAKhB,OAASgB,KAAKQ,cAGvBC,WAAW,EACXC,MAAM,IAGVC,QAAS,CACP,eAAexB,EAAQyB,GACrB,MAAMnB,QAAaoB,QAAQC,IAAIF,EAAaG,iBACtCf,KAAKN,iBAAiBsB,kBAC5B,MAAMC,QAAejB,KAAKN,iBAAiBuB,OAAOxB,GAC5CyB,QAAqBlB,KAAKN,iBAAiByB,oBAAoBF,GAErE,SADMjB,KAAKN,iBAAiB0B,YAAY3B,EAAMO,KAAKO,SAChDP,KAAKL,cACN,UACQK,KAAKN,iBAAiB2B,aAAaH,EAAclB,KAAKO,SAC5D,MAAOe,GACPC,QAAQC,IAAIF,GAGhBtB,KAAKyB,wBAEP,qBACE,MAAMC,QAAe1B,KAAKN,iBAAiBiC,iCAAiC3B,KAAKO,SAC3Ed,EAAOiC,EAAOjC,KACdmC,EAAMF,EAAOE,IACbC,EAAU,CAAC,aAAa,YAAa,aAAc,UAAW,UAC9DC,EAAO,GACb,IAAK,MAAMC,KAAStC,EAAM,CACxB,MAAMuC,EAAM,CACVvC,EAAKsC,GAAOE,SAAS,GAAGC,iBACxBzC,EAAKsC,GAAOI,WACZ1C,EAAKsC,GAAOE,SAAS,GAAGE,WACxBC,IAAO3C,EAAKsC,GAAOM,cAAcC,OAAO,eACxC,6CAA6CV,kEAI/CE,EAAKS,KAAKP,GAEZ,MAAO,CACL,CACEQ,MAAO,GACPC,MAAO,GACPC,MAAO,CAAEb,UAASC,WAIxBtB,YACE,MAAO,CACL,CACEmC,GAAI,oBACJC,SAAU,kCACVC,UAAW,IAAM7C,KAAKJ,8BACtBkD,KAAMC,OAAUC,gBAChBC,QAAUC,GAAWlD,KAAKmD,eAC1BC,OAAQ,CACNC,iBAAkB,CAAC,WAGvB,CACEV,GAAI,YACJC,SAAU,wBACVE,KAAMC,OAAUO,oBAChBC,WAAa9D,GAAc+D,OAAWC,SAAShE,GAC/C2D,OAAQ,CACNC,iBAAkB,CAAErD,KAAK0D,mBAE3BC,cAAgBV,GACPA,EAAQW,IAAIC,UAAA,UACP7D,KAAKN,iBAAiBoE,gBAAgB,mBAAoBC,EAAOrB,MAAMsB,QACjFC,YAAcjE,KAAKN,iBAAiBwE,6BAA6BH,EAAOrB,MAAMsB,OAAQD,EAAOrB,MAAMyB,kBAM7GT,iBACE,OAAG1D,KAAKJ,8BACC,GACK,W,qBCtGpB,MAAMwE,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASrG,KAErD","file":"js/chunk-2d0cf669.42e1f3f2.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\nimport moment from \"dayjs\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    previousRadiologyExaminations: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.previousRadiologyExaminations = await this.radiologyService.showPreviousRadiolgy(this.patient)\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){\n      const data = await Promise.all(computedData.radiology)\n      await this.radiologyService.createEncounter()\n      const obsObj = await this.radiologyService.obsObj(data) \n      const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n      await this.radiologyService.printOrders(data, this.patient)\n      if(this.isPacsEnabled) {\n        try {\n          await this.radiologyService.submitToPacs(savedObsData, this.patient)\n        } catch (error) {\n          console.log(error)\n        }\n      }\n      this.gotoPatientDashboard()\n    },\n    async getTableData() {\n      const params = await this.radiologyService.getPreviousRadiologyExaminations(this.patient)\n      const data = params.data\n      const url = params.url\n      const columns = ['Accession#','Body Part', 'Order Type', 'Ordered', 'Result']\n      const rows = [] as Array<any>\n      for (const order in data) {\n        const row = [\n          data[order].children[0].accession_number,\n          data[order].value_text,\n          data[order].children[0].value_text,\n          moment(data[order].obs_datetime).format('DD/MMM/YYYY'),\n          `<ion-button slot=\"end\" size=\"large\" href=\"${url}\" color=\"success\">\n            View\n          </ion-button>`\n        ]\n        rows.push(row)\n      }\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'radiology_results',\n          helpText: 'Previous Radiology Examinations',\n          condition: () => this.previousRadiologyExaminations,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.getTableData(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'radiology',\n          helpText: 'Radiology Examination',\n          type: FieldType.TT_RADIOLOGY_PICKER,\n          validation: (data: any) => Validation.required(data),\n          config: {\n            hiddenFooterBtns: [ this.disableBackBtn() ],\n          },\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n              child: (await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))\n            }))\n          },\n        },\n      ]\n    },\n    disableBackBtn() {\n      if(this.previousRadiologyExaminations) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=186fde49&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}