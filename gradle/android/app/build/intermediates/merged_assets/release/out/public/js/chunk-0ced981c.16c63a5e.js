(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0ced981c"],{"668a":function(e,t,a){"use strict";a.r(t);var n=a("7a23");function r(e,t,a,r,s,i){const d=Object(n["resolveComponent"])("his-standard-form"),u=Object(n["resolveComponent"])("ion-page");return Object(n["openBlock"])(),Object(n["createBlock"])(u,null,{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(d,{key:e.hisFormKey,activeField:e.fieldComponent,skipSummary:!0,fields:e.fields,onOnIndex:t[1]||(t[1]=t=>e.fieldComponent=""),onOnFinish:e.onFinish},null,8,["activeField","fields","onOnFinish"])]),_:1})}var s=a("d95e"),i=a("7920"),d=a("2706"),u=a("8a30"),o=a("2ef0"),c=a("76f1"),l=a("8ee8"),p=a("c84b"),h=a("b5e4"),g=Object(n["defineComponent"])({components:{HisStandardForm:i["a"],IonPage:u["D"]},data:()=>({hisFormKey:0,fields:[],allDrugs:[],fieldComponent:"",service:{}}),created(){this.fields=this.getFields()},methods:{async onFinish(e,t){try{if(await p["a"].saveDrugSet(t))return Object(h["d"])("Drugset saved successfully"),this.$router.back();Object(h["e"])("Unable to save drugset")}catch(a){Object(h["e"])(""+a)}},getFields(){return[{id:"name",helpText:"Enter drug set name",type:s["b"].TT_TEXT,computedValue:e=>e.value,validation:e=>d["a"].validateSeries([()=>d["a"].required(e),()=>(""+e.value).match(/^([a-zA-Z_ ]{2,17})'?-?([a-zA-Z_ ]{1,17})$/)?null:["Enter a valid drug set name."]])},{id:"description",helpText:"Drug set description",type:s["b"].TT_TEXT,computedValue:e=>e.value,validation:e=>d["a"].validateSeries([()=>d["a"].required(e),()=>(""+e.value).match(/^([a-zA-Z_ ]{2,100})'?-?([a-zA-Z_ ]{1,100})$/)?null:["Enter a valid drug set description"]])},{id:"drug_selection",helpText:"Select drugs to add",type:s["b"].TT_MULTIPLE_SELECT,validation:e=>d["a"].required(e),config:{showKeyboard:!0},options:async()=>(Object(o["isEmpty"])(this.allDrugs)&&(this.allDrugs=(await c["a"].getDrugs({page_size:1e3})).map(e=>({label:e.name,value:e.id,other:{drug:e.name,quantity:0,frequency:""}}))),this.allDrugs)},{id:"drugs",helpText:"Set drugs",type:s["b"].TT_ANC_DRUGSET_INPUT,computedValue:e=>e.map(e=>e.other),validation:e=>d["a"].validateSeries([()=>d["a"].required(e),()=>e.map(e=>e.other.quantity&&e.other.frequency).every(Boolean)?null:["Data is not complete"]]),options:e=>e.drug_selection,config:{drugFrequencies:Object.keys(l["b"]).map(e=>({label:e,value:e}))}}]}}}),y=a("6b0d"),m=a.n(y);const _=m()(g,[["render",r]]);t["default"]=_},"8ee8":function(e,t,a){"use strict";a.d(t,"b",(function(){return d})),a.d(t,"a",(function(){return u}));var n=a("cc6f"),r=a("71c3"),s=a("2ef0"),i=a("9283");const d={"Once a day (OD)":1,"Twice a day (BD)":2,"Three a day (TDS)":3,"Four times a day (QID)":4,"Five times a day (5X/D)":5,"Six times a day (Q4HRS)":6,"In the morning (QAM)":.5,"Once a week (QWK)":.14,"Once a month":.03,"Twice a month":.071};class u extends n["a"]{constructor(e,t){super(e,25,t)}ttvDrugObj(){return{drug_inventory_id:609,dose:.5,equivalent_daily_dose:.5,frequency:"Once a day (od)",start_date:this.date,auto_expire_date:this.date,instructions:"Once a day",units:"ml"}}async updateTTvOrder(){const e=await this.dispenseTTV();if(!Object(s["isEmpty"])(e)){const t=e[0].order_id;return r["a"].updateDispensationOrders([{order_id:t,quantity:1}])}throw"Unable to dispense"}dispenseTTV(){return this.createOrders([this.ttvDrugObj()])}createOrders(e){return r["a"].create({drug_orders:e,encounter_id:this.getEncounterID()})}async submitTreatment(e){await this.createEncounter();const t=await this.createOrders(e.map(e=>this.buildDrugOrderObj(e))),a=new n["a"](this.patientID,54,this.providerID);await a.createEncounter(),e.forEach(e=>{const a=d[e.frequency]*e.duration;t.forEach(t=>{t.drug_inventory_id===e.id&&(t.quantity=a)})}),await r["a"].updateDispensationOrders(t)}buildDrugOrderObj(e){const t=new Date(this.date),a=t.setDate(t.getDate()+parseInt(""+e.duration)),n=e.dose||d[e.frequency],r=parseFloat(n)*d[e.frequency];return{drug_inventory_id:e.id,dose:n,equivalent_daily_dose:r,frequency:e.frequency,start_date:this.date,auto_expire_date:i["b"].toStandardHisFormat(new Date(a)),instructions:e.drug_name+":"+e.dose+" "+e.units+" "+e.frequency+"days",units:e.units}}}},c84b:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));a("13d5");var n=a("1c74");class r extends n["e"]{static saveDrugSet(e){const t={...e};return t["datetime"]=n["e"].getSessionDate(),this.postJson("/drug_sets",e)}static voidDrugSet(e){return this.void("/drug_sets/"+e,{date:this.getSessionDate()})}static async getDrugSets(){const e=await this.getJson("drug_sets");return e?Object.keys(e["set_names"]).reduce((t,a)=>{const n=e["set_names"][a],r=e["set_descriptions"][a],s=e["drug_sets"][a];return t.push({id:parseInt(a),name:n,description:r,drugs:Object.keys(s).reduce((e,t)=>[...e,{id:parseInt(t),...s[t],drug_name:s[t].drug_name,duration:parseInt(s[t].duration),frequency:s[t].frequency,units:s[t].units}],[])}),t},[]):[]}}}}]);
//# sourceMappingURL=chunk-0ced981c.16c63a5e.js.map