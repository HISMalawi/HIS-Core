import{bo as M,d as $,a5 as u,b8 as _,C as x,x as P,I as S,v as A,s as N,A as z,y as E,z as H,N as L,aB as O,D as R,aA as Y,aC as T,_ as q,M as n,o as r,n as p,m as o,w as t,b as i,F as m,q as U,c as h,t as j,X as G}from"./index-VkXRcily.js";class K extends M{constructor(a,s){super(a,30,s)}}const X=$({name:"Modal",props:{factors:{type:Object,required:!0},title:{type:String,default:""}},computed:{showManageBPButton(){return this.$route.name!="bp_management"}},created(){this.patientID=parseInt("".concat(this.$route.params.patient_id))},methods:{async postActivities(){const e=new K(this.patientID,-1);if(await e.createEncounter()){const s=await this.buildObs();await e.saveObservationList(s),await this.closeModal()}},manageBP(){this.$router.push("/art/encounters/bp_management/".concat(this.patientID))},exit(){u.dismiss([])},async closeModal(){await u.dismiss(this.riskFactors)},async buildObs(){return this.riskFactors.map(e=>{const a=e.isChecked===!0?"Yes":"No",s=_.getConceptID(a,!0);return{concept_id:_.getConceptID(e.concept,!0),value_coded:s}})}},data(){return{patientID:-1,riskFactors:[{name:"Diabetes",isChecked:!1,concept:"Diabetes"},{name:"Cronic kidney disease",isChecked:!1,concept:"CKD"},{name:"Past history of IHD or CVD",isChecked:!1,concept:"history of CVD"},{name:"First degree relative with IHD or CVD <65",isChecked:!1,concept:"relative with CVD"},{name:"Patient currently smokes",isChecked:!1,concept:"patient smokes"}]}},mounted(){this.factors.forEach(e=>{if(e.value==="Yes"){const a=this.riskFactors.findIndex(s=>s.concept===e.concept);this.riskFactors[a].isChecked=!0}})},components:{IonButton:x,IonContent:P,IonHeader:S,IonTitle:A,IonToolbar:N,IonLabel:z,IonList:E,IonItem:H,IonCheckbox:L,IonRow:O,IonFooter:R,IonGrid:Y,IonCol:T}});function J(e,a,s,f,Q,W){const C=n("ion-title"),d=n("ion-toolbar"),k=n("ion-header"),b=n("ion-label"),I=n("ion-checkbox"),g=n("ion-item"),v=n("ion-list"),y=n("ion-col"),w=n("ion-row"),D=n("ion-grid"),B=n("ion-content"),l=n("ion-button"),F=n("ion-footer");return r(),p(m,null,[o(k,null,{default:t(()=>[o(d,null,{default:t(()=>[o(C,null,{default:t(()=>[i("Risk Factors")]),_:1})]),_:1})]),_:1}),o(B,{style:{overflowY:"hidden",background:"grey"}},{default:t(()=>[o(D,null,{default:t(()=>[o(w,null,{default:t(()=>[o(y,null,{default:t(()=>[o(v,{style:{overflowY:"auto",height:"78vh"}},{default:t(()=>[(r(!0),p(m,null,U(e.riskFactors,c=>(r(),h(g,{key:c},{default:t(()=>[o(b,null,{default:t(()=>[i(j(c.name),1)]),_:2},1024),o(I,{modelValue:c.isChecked,"onUpdate:modelValue":V=>c.isChecked=V,slot:"start"},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024))),128))]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),o(F,null,{default:t(()=>[o(d,null,{default:t(()=>[o(l,{size:"large",onClick:e.exit,slot:"start",color:"danger"},{default:t(()=>[i(" Close ")]),_:1},8,["onClick"]),e.showManageBPButton?(r(),h(l,{key:0,size:"large",onClick:e.manageBP,slot:"start"},{default:t(()=>[i(" Manage BP ")]),_:1},8,["onClick"])):G("",!0),o(l,{size:"large",color:"success",onClick:e.postActivities,slot:"end"},{default:t(()=>[i(" Save ")]),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const ee=q(X,[["render",J],["__scopeId","data-v-a68c415c"]]);export{ee as R};
