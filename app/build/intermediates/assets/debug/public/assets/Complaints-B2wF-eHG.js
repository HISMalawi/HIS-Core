import{H as T}from"./HisStandardForm-7nJndMCO.js";import{_ as u}from"./EncounterMixin.vue_vue_type_script_lang-CcxKj-5p.js";import{P as E}from"./patient_complaints_service-DIOO-qYP.js";import{L as D}from"./LabOrderModal-BSL2eUpN.js";import{d as g,s as B,k as I,I as k,j as R,i as V,v as x,cV as _,aj as F,X as m,A as f,B as s,o as y,f as $,a as n,w as o,e as d,F as A,x as L,b3 as h,aX as M,J as N,z as l,V as H,c as z}from"./index-CmAu9cV_.js";import{P as j}from"./patient_radiology_service-BlGNEPoD.js";import G from"./HisRadiologyPicker-D-zFXlK7.js";import"./encounter_guidelines-C0VvN8Nw.js";import"./GuidelineEngine-D6V1_Znr.js";import"./lab_order_service-byBo3ZA4.js";import"./SelectMixin-DtjlT7HI.js";import"./BaseTextInput-lrKK1yng.js";import"./FieldMixin.vue_vue_type_script_lang-Bb13pIN4.js";const X=g({name:"Modal",components:{IonButton:B,IonContent:I,IonHeader:k,IonTitle:R,IonToolbar:V,IonFooter:x,HisRadiologyPicker:G},mixins:[u],data:()=>({radiologyService:{},isPacsEnabled:!1,emitedSelectedOptions:{}}),watch:{ready:{async handler(e){e&&(this.radiologyService=new j(this.patientID,this.providerID),this.isPacsEnabled=await _.isPACsEnabled())},immediate:!0,deep:!0}},methods:{async onValue(e){this.emitedSelectedOptions=e},async getSelected(){return this.emitedSelectedOptions.map(async e=>({...await this.radiologyService.buildValueCoded("Radiology Orders",e.other.parent),child:[await this.radiologyService.buildValueCodedFromConceptId(e.other.parent,e.other.concept_id)]}))},async onSubmit(){if(!F.isEmpty(this.emitedSelectedOptions)){this.closeModal();let e=await this.getSelected();e=await Promise.all(e),await this.radiologyService.createEncounter();const t=await this.radiologyService.obsObj(e),i=await this.radiologyService.saveObservationList(t);if(await this.radiologyService.printOrders(i,this.patient),this.isPacsEnabled)try{await this.radiologyService.submitToPacs(i,this.patient)}catch(a){console.log(a)}}},async closeModal(){await m.dismiss([])}}});function q(e,t,i,a,b,C){const c=s("ion-title"),r=s("ion-toolbar"),S=s("ion-header"),v=s("his-radiology-picker"),w=s("ion-content"),p=s("ion-button"),O=s("ion-footer");return y(),$(A,null,[n(S,null,{default:o(()=>[n(r,null,{default:o(()=>[n(c,{class:"his-lg-text"},{default:o(()=>[d("Radiology Examination")]),_:1})]),_:1})]),_:1}),n(w,{style:{overflow:"hidden",background:"grey",height:"70vh"}},{default:o(()=>[n(v,{onOnValue:e.onValue},null,8,["onOnValue"])]),_:1}),n(O,null,{default:o(()=>[n(r,null,{default:o(()=>[n(p,{onClick:t[0]||(t[0]=P=>e.onSubmit()),size:"large",slot:"end",disabled:e.emitedSelectedOptions.length===0},{default:o(()=>[d(" Place orders ")]),_:1},8,["disabled"]),n(p,{onClick:t[1]||(t[1]=P=>e.closeModal()),size:"large",slot:"start",color:"danger"},{default:o(()=>[d(" Close ")]),_:1})]),_:1})]),_:1})],64)}const J=f(X,[["render",q]]),K=g({components:{HisStandardForm:T,IonPage:L},mixins:[u],data:()=>({complaintsService:{},todaysDate:h.getSessionDate(),presentingComplaints:"",isPacsEnabled:!1,radiologyBtnName:"Radiology Order",hasTriageComplaints:!1}),watch:{ready:{async handler(e){e&&(this.complaintsService=new E(this.patientID,this.providerID),this.isPacsEnabled=await _.isPACsEnabled(),this.hasTriageComplaints=await this.getTriagePresentingComplaints(),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const i=await Promise.all([...t.complaints,t.other_complaints]);await this.complaintsService.createEncounter(),await this.complaintsService.saveObservationList(i),this.nextTask()},async launchOrderSelection(){const e=await m.create({component:D,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async launchRadiologyOrderSelection(){const e=await m.create({component:J,backdropDismiss:!1,cssClass:"large-modal"});e.present(),await e.onDidDismiss()},async getTriagePresentingComplaints(){if(!((await this.complaintsService.fetchLatestTriageEncounter()).length>0))return!1;const i=(await M.getEncounters(this.patientID,this.todaysDate)).filter(function(a){return a.type.name=="TRIAGE PRESENTING COMPLAINTS"&&N.toStandardHisFormat(a.encounter_datetime)==h.getSessionDate()});return i.length>0?(this.presentingComplaints=i[0].observations,!0):!1},buildResults(){const e=["Group","Presenting complaints"];let t="",i=this.presentingComplaints.map(a=>{if(a.obs_group_id!=null)return[t,a.value_text];t=a.value_text});return i=i.filter(a=>a!=null),this.presentingComplaints=i,[{label:"",value:"",other:{columns:e,rows:i}}]},getFields(){return[{id:"triage_complaints",helpText:"Triaging Complaints",condition:()=>this.hasTriageComplaints,type:l.TT_TABLE_VIEWER,options:()=>this.buildResults(),config:{hiddenFooterBtns:["Clear"]}},{id:"complaints",helpText:"Presenting Complaints",type:l.TT_COMPLAINTS_PICKER,validation:e=>H.required(e),computedValue:e=>e.filter(t=>!/other/i.test(t.label)).map(async t=>({...await this.complaintsService.buildValueCoded("Presenting complaint",t.other.parent),child:[await this.complaintsService.buildValueCodedFromConceptId(t.other.parent,t.other.concept_id)]})),config:{hiddenFooterBtns:[this.showRadiologyOdersBtn(),this.disableBackBtn()],footerBtns:[{name:"Lab Order",size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchOrderSelection(),visibleOnStateChange:e=>e.index===1},{name:this.radiologyBtnName,size:"large",slot:"end",color:"primary",visible:!0,onClick:async()=>await this.launchRadiologyOrderSelection(),visibleOnStateChange:e=>e.index===1}]}},{id:"other_complaints",helpText:"Other Complaints",type:l.TT_TEXT,condition:e=>e.complaints.some(t=>t.label==="Other (specify)"&&t.isChecked),computedValue:async e=>({...await this.complaintsService.buildValueCoded("Presenting complaint","Other"),child:[await this.complaintsService.buildValueText("Other",e.label)]})},{id:"all_presenting_complaints",helpText:"Summary",condition:()=>this.presentingComplaints.length>0,type:l.TT_SUMMARY,options:e=>this.buildSummaryResults(e),config:{hiddenFooterBtns:["Clear"]}}]},showRadiologyOdersBtn(){return this.isPacsEnabled?"":this.radiologyBtnName},buildSummaryResults(e){const t=e.complaints.map(a=>({label:"OPD Complaints",value:a.label})),i=this.presentingComplaints.map(a=>({label:"Triaging Complaints",value:a[1]}));return t.concat(i)},disableBackBtn(){return this.hasTriageComplaints?"":"Back"}}});function U(e,t,i,a,b,C){const c=s("his-standard-form"),r=s("ion-page");return y(),z(r,null,{default:o(()=>[n(c,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit,skipSummary:!0},null,8,["cancelDestinationPath","fields","onFinishAction"])]),_:1})}const ce=f(K,[["render",U]]);export{ce as default};
