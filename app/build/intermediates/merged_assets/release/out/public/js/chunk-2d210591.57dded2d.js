(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d210591"],{b805:function(e,t,i){"use strict";i.r(t);var n=i("7a23");function a(e,t,i,a,r,o){const s=Object(n["resolveComponent"])("his-standard-form");return Object(n["openBlock"])(),Object(n["createBlock"])(s,{cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}var r=i("9441"),o=i("7365"),s=i("cc6f");class c extends s["a"]{constructor(e,t){super(e,80,t)}}var l=i("2706"),d=i("d95e"),u=i("e86e"),p=i("b5e4"),b=Object(n["defineComponent"])({components:{HisStandardForm:r["a"]},mixins:[o["a"]],data:()=>({receptionService:{}}),watch:{ready:{async handler(e){e&&(this.receptionService=new c(this.patient.getID(),this.providerID),this.fields=this.getFields())},immediate:!0,deep:!0}},methods:{async onSubmit(e,t){const i=await this.receptionService.createEncounter();if(!i)return Object(p["e"])("Unable to create registration encounter");const n=await this.resolveObs({...t}),a=await this.receptionService.saveObservationList(n);if(!a)return Object(p["e"])("Unable to save observations");this.$router.push("/registration/encounters/patient_services/"+this.patientID)},getFields(){return[{id:"referral",helpText:"Is the Patient a Referral Case From Another Health Facility?",type:d["b"].TT_SELECT,validation:e=>l["a"].required(e),computedValue:e=>({obs:this.receptionService.buildValueCoded("Is patient referred?",e.value)}),options:()=>[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},{id:"referring_facility_name",helpText:"Referred from",type:d["b"].TT_SELECT,validation:e=>l["a"].required(e),computedValue:({label:e})=>({obs:this.receptionService.buildValueText("Referred from",e)}),condition:e=>"Yes"===e.referral.value,options:(e,t="")=>Object(u["b"])(t),config:{showKeyboard:!0,isFilterDataViaApi:!0}}]}}}),h=i("6b0d"),f=i.n(h);const v=f()(b,[["render",a]]);t["default"]=v}}]);
//# sourceMappingURL=chunk-2d210591.57dded2d.js.map