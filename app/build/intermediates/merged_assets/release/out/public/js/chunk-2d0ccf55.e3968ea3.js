(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ccf55"],{"4fc0":function(t,e,s){"use strict";s.r(e);var i=s("7a23");function n(t,e,s,n,r,a){const o=Object(i["resolveComponent"])("his-standard-form");return Object(i["openBlock"])(),Object(i["createBlock"])(o,{skipSummary:!0,cancelDestinationPath:t.cancelDestination,fields:t.fields},null,8,["cancelDestinationPath","fields"])}var r=s("d95e"),a=s("b5e4"),o=s("cc6f"),d=s("71c3");class u extends o["a"]{constructor(t,e){super(t,54,e),this.drugHistory=[],this.currentDrugOrder=[]}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(t,e){return[{drug_order_id:t,date:this.date,quantity:e}]}saveDispensations(t){return o["a"].postJson("/dispensations",{dispensations:t,program_id:o["a"].getProgramID()})}async voidOrder(t){return o["a"].void("/dispensations/"+t,{})}async loadDrugHistory(){const t=await d["a"].getDrugOrderHistory(this.patientID);t&&(this.drugHistory=t)}async loadCurrentDrugOrder(){const t=await d["a"].getDrugOrders(this.patientID);t&&(this.currentDrugOrder=await Promise.all(t))}calcCompletePack(t,e){const s=t.barcodes.sort((function(t,e){return t.tabs-e.tabs}));if(0==s.length||0==e)return e;for(let r=0;r<=s.length-1;r++)if(parseInt(s[r].tabs)>=e)return s[r].tabs;const i=parseInt(s[0].tabs);let n=parseInt(s[s.length-1].tabs);while(n<e)n+=i;return n}}var l=s("7365"),c=s("9283"),p=Object(i["defineComponent"])({mixins:[l["a"]],data:()=>({dispensation:{}}),watch:{patient:{async handler(t){this.dispensation=new u(t.getID(),this.providerID),await this.dispensation.loadCurrentDrugOrder(),await this.dispensation.loadDrugHistory(),this.fields=this.getFields()},deep:!0}},methods:{saveDispensations(t){const e=this.buildDispensations(t);return this.dispensation.saveDispensations(e)},buildDispensations(t){return this.dispensation.buildDispensations(t.other.order_id,t.value)},buildMedicationHistory(){return this.dispensation.getDrugHistory().sort((t,e)=>{const s=new Date(t.order.start_date),i=new Date(e.order.start_date);return i-s}).map(t=>({medication:t.drug.name,date:c["b"].toStandardHisDisplayFormat(t.order.start_date),amount:t.quantity}))},buildOrderOptions(){return this.dispensation.getCurrentOrder().map(t=>({label:t.drug.name,value:t.quantity||0,other:{drug_id:t.drug.drug_id,order_id:t.order.order_id,amount_needed:this.calculateCompletePack(t)}}))},getPackSizesRows(t,e){const s=this.dispensation.getDrugPackSizes(t);return s.map(t=>{const s=e>0?e/t:"-";return[t,s,0,0]})},calculateCompletePack(t){const e=parseFloat(t.amount_needed)-(t.quantity||0),s=this.dispensation.calcCompletePack(t,e);return s<0?0:s},isDoneDispensing(t){return t.map(t=>0!=t.value).every(Boolean)},async isValidDispensation(t){let e=!0;const s=parseInt(t.value.toString()),i=t.other["amount_needed"],n=s/i*100;return n>110&&(e=await Object(a["a"])("Are you sure you want to dispense over 110% of the prescribed pill count?")),n<100&&(e=await Object(a["a"])("Are you sure you want to dispense less than 100% of the prescribe amount?")),e},getFields(){return[{id:"dispenses",helpText:"Dispensation",type:r["b"].TT_DRUG_DISPENSER,onValueUpdate:async(t,e)=>-1!=t.value&&this.isDoneDispensing(e)?this.gotoPatientDashboard():(t.other["amount_needed"]=0,await this.dispensation.loadCurrentDrugOrder(),this.buildOrderOptions()),onValue:async(t,e)=>{if(-1===t.value){const e=await this.dispensation.voidOrder(t.other.order_id);return!!e}if(!e){const e=await this.isValidDispensation(t);if(!e)return!1}const s=await this.saveDispensations(t);return!!s||(Object(a["e"])("Unable to save dispensation"),!1)},config:{medicationHistory:this.buildMedicationHistory(),toolbarInfo:[{label:"Name",value:this.patient.getFullName()},{label:"Gender",value:this.patient.getGender()},{label:"Date Of Birth",value:c["b"].toStandardHisDisplayFormat(this.patient.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>this.buildOrderOptions()}]}}}),h=s("6b0d"),g=s.n(h);const D=g()(p,[["render",n]]);e["default"]=D}}]);
//# sourceMappingURL=chunk-2d0ccf55.e3968ea3.js.map