(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a5a6f268"],{5713:function(e,t,a){"use strict";a.d(t,"a",(function(){return s}));var i=a("1c74"),n=a("8158");class s extends i["e"]{constructor(){super()}static createAddress(e,t,a){return this.postJson("addresses",{address_type:e,addresses_name:t,parent_location:a})}static getFacilities(e={}){return super.getJson("/locations",e)}static async getSpecialistClinics(){const e=await n["a"].getConceptID("Specialist clinic");return super.getJson("/concept_set",{id:e})}static getRegions(){return super.getJson("/regions")}static getDistricts(e){return super.getJson("/districts",{region_id:e,page_size:1e3})}static getVillages(e,t=""){return super.getJson("/villages",{traditional_authority_id:e,name:t})}static getTraditionalAuthorities(e,t=""){return super.getJson("/traditional_authorities",{district_id:e,name:t})}}},9841:function(e,t,a){"use strict";a.r(t);var i=a("7a23");function n(e,t,a,n,s,r){const o=Object(i["resolveComponent"])("his-standard-form"),l=Object(i["resolveComponent"])("ion-page");return Object(i["openBlock"])(),Object(i["createBlock"])(l,null,{default:Object(i["withCtx"])(()=>[Object(i["createVNode"])(o,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}var s=a("7365"),r=a("d95e"),o=a("ff01"),l=a("2706"),c=a("8a30"),u=a("e86e"),d=a("9283"),p=a("b5e4"),v=a("1c74"),h=Object(i["defineComponent"])({components:{IonPage:c["D"]},mixins:[s["a"]],data:()=>({service:{}}),watch:{ready:{async handler(e){e&&(this.service=new o["a"](this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){try{await this.service.enrollPatient()}catch(i){if(!(i instanceof v["d"]))throw i;console.warn(""+i)}const a=await this.resolveObs(t);await this.service.createEncounter(),await this.service.saveObservationList(a),this.nextTask()},buildDelieveryDateObs(e){if("Unknown"!=e)return[this.service.buildValueDate("Last menstrual period",e),this.service.buildValueDate("Estimated date of delivery",this.service.estimateDelieveryDate(e)),this.service.buildValueNumber("Week of First Visit",this.service.calculateWeekOfFirstVisit(e))]},getFields(){return[{id:"lnmp",proxyID:"delivery_date",helpText:"Last Normal Menstrual Period",type:r["b"].TT_ANC_LMP_DATE_INPUT,computedValue:e=>this.buildDelieveryDateObs(e.value),beforeNext:async e=>{const t=parseInt(e.other);return"number"!==typeof t||!(t<=0||t>42)||!!await Object(p["a"])("Gestation weeks out of range of 0-42. Are you sure you want to continue?")},validation:e=>this.validateSeries([()=>l["a"].required(e),()=>{if(e.value){const t=new Date(e.value),a=new Date;if(t>a)return["Last menstrual period cannot be in the future"]}return null}]),config:{initialDate:()=>this.service.date,calculateDelieveryDate:e=>d["b"].toStandardHisDisplayFormat(this.service.estimateDelieveryDate(e)),calculateGestationWeeks:e=>this.service.calculateWeekOfFirstVisit(e),allowUnknown:!0}},{id:"estimate_lmp",proxyID:"delivery_date",helpText:"Gestation (months)",type:r["b"].TT_NUMBER,condition:e=>"Unknown"===e.lnmp.value,computedValue:e=>this.buildDelieveryDateObs(this.service.calculateGestationDateFromPeriod(e.value)),validation:e=>this.validateSeries([()=>l["a"].required(e),()=>l["a"].rangeOf(e,1,10)])},{id:"planned_delivery_place",helpText:"Planned delivery place",type:r["b"].TT_SELECT,computedValue:e=>this.service.buildValueText("Planned Delivery Place",e.label),validation:e=>l["a"].required(e),options:(e,t="")=>Object(u["b"])(t),config:{footerBtns:[{name:"Here",slot:"end",onClickComponentEvents:{setValue:e=>e.btnOutput},onClick:()=>o["a"].getLocationName()}],showKeyboard:!0,isFilterDataViaApi:!0}},{id:"bed_net_available_for_use",helpText:"Mosquito net in good condition available for own use",type:r["b"].TT_SELECT,computedValue:e=>this.service.buildValueCoded("Do you use bed nets",e.value),validation:e=>l["a"].required(e),options:()=>this.yesNoOptions()},{id:"bed_net_given",helpText:"Bed net given today",type:r["b"].TT_SELECT,computedValue:e=>this.service.buildValueCoded("Mosquito net started",e.value),validation:e=>l["a"].required(e),condition:e=>"No"===e.bed_net_available_for_use.value,options:()=>this.yesNoOptions()},{id:"previous_ttv_given",helpText:"Previous TTV given before this pregnancy",type:r["b"].TT_NUMBER,computedValue:e=>this.service.buildValueNumber("TTV",e.value),validation:e=>l["a"].required(e)}]}}}),f=a("6b0d"),b=a.n(f);const m=b()(h,[["render",n]]);t["default"]=m},e86e:function(e,t,a){"use strict";a.d(t,"b",(function(){return s})),a.d(t,"c",(function(){return r})),a.d(t,"e",(function(){return o})),a.d(t,"d",(function(){return l})),a.d(t,"a",(function(){return c})),a.d(t,"f",(function(){return u})),a.d(t,"g",(function(){return d}));var i=a("5713"),n=a("2ef0");async function s(e=""){const t=await i["a"].getFacilities({name:e});return t.filter(e=>!Object(n["isEmpty"])(e)).map(e=>({label:e.name,value:e.location_id,other:e}))}async function r(e=""){const t=await i["a"].getFacilities({name:e,tag:"Facility adult sections"});return t.map(e=>({label:e.name,value:e.name,other:e}))}async function o(){const e=await i["a"].getSpecialistClinics();return e.map(e=>({label:e.name,value:e.name,other:e}))}async function l(){const e=await i["a"].getRegions();return e.map(e=>({label:e.name,value:e.region_id,other:e}))}async function c(e){const t=await i["a"].getDistricts(e);return t.map(e=>({label:e.name,value:e.district_id,other:e}))}async function u(e,t=""){const a=await i["a"].getTraditionalAuthorities(e,t);return a.map(e=>({label:e.name,value:e.traditional_authority_id,other:e}))}async function d(e,t=""){const a=await i["a"].getVillages(e,t);return a.map(e=>({label:e.name,value:e.village_id,other:e}))}},ff01:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var i=a("cc6f"),n=a("74f4"),s=a("5a0c"),r=a.n(s),o=a("0011");class l extends i["a"]{constructor(e,t){super(e,81,t)}async enrollPatient(){const e=new n["a"](this.patientID);await e.enrollProgram(),e.setStateDate(this.date),e.setStateId(118),await e.updateState()}calculateWeekOfFirstVisit(e){const t=new Date(e);t.setDate(t.getDate()+7);const a=new Date(this.getDate()),i=a-t;return String(Math.floor(i/6048e5))}calculateGestationDateFromPeriod(e){return r()(this.date).subtract(e,"months").endOf("month").format("YYYY-MM-DD")}estimateDelieveryDate(e){const t=new Date(e);t.setDate(t.getDate()+7),t.setMonth(t.getMonth()+9);const a=Object(o["a"])(t.getMonth()+1),i=Object(o["a"])(t.getDate());return`${t.getFullYear()}-${a}-${i}`}}}}]);
//# sourceMappingURL=chunk-a5a6f268.ed948d95.js.map