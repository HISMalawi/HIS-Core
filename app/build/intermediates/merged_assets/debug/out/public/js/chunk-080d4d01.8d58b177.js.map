{"version":3,"sources":["webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/encounters/StagingMixin.vue"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","LocationService","Service","constructor","type","name","parentLocation","postJson","params","getJson","conceptId","ConceptService","getConceptID","id","regionID","traditionalAuthorityID","villageID","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","EstimationFieldType","label","value","getYearField","showUnknown","primaryFunctions","push","helpText","appearInSummary","FieldType","TT_TEXT","config","customKeyboard","getMonthField","TT_SELECT","options","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","s","parseInt","getDefaultDate","form","field","datePart","defaultValue","date","year","month","day","split","d","HisDate","toStandardHisDisplayFormat","validateMinMax","computed","minDate","min","Date","maxDate","max","generateDateFields","refDate","fullDate","yearValue","monthValue","dayValue","yearID","monthID","dayID","ageEstimateID","durationEstimateID","estimation","allowUnknown","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","f","includes","condition","buildHelpTextDate","part","parts","default","reduce","partValues","dpart","wl","undefined","join","init","updateHelpTextOnValue","data","proxyID","unload","v","toString","validation","c","required","StandardValidations","match","isNaN","minYear","getYear","summaryMapValue","summaryLabel","_","ref","computedValue","val","computeValue","isEstimate","beforeNext","keyboardActions","valueEstimateCondition","estimateType","conditions","estimationFieldType","every","Boolean","ageEstimateRegex","AGE_ESTIMATE_FIELD","dayjs","getSessionDate","subtract","MONTH_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","ADULT_WHO_STAGE_CRITERIA","concept","priority","stage","reasonForArt","reason","CHILD_WHO_STAGE_CRITERIA","CONTRADICTING_STAGE_DEFINITIONS_ALERTS","actions","alert","alertConfirmation","facts","bmi","confirmBtnLabel","cancelBtnLabel","selectedCondition","keepAsymptomatic","selectedConditions","stageThreeConditions","stageFourConditions","stageTwoConditions","RECOMMENDED_CHILD_STAGING_CONDITIONS","isChecked","description","color","show","info","weightPercentile","disabled","RECOMMENDED_ADULT_STAGING_CONDITIONS","CHILD_ART_ELIGIBILITY","ageInMonths","age","pshdConditions","getConceptsByCategory","pshdCondition","testType","cd4","cd4Modifier","modifier","ADULT_ART_ELIGIBILITY","severeSymp","found","total","symp","gender","breastFeeding","answer","pregnant","StagingCategory","StagingService","AppEncounterService","patientID","providerID","confirmatoryTest","isAdult","isPedaid","setAge","getFacilities","filter","getConfirmatoryTestType","cd4CountIsValid","e","getAlertGuidelines","getWhoStageGuidelines","getProgramEligibilityGuidelines","getRecommendedConditionGuidelines","getStagingConditions","category","getStagingCategoryByNum","buildWhoStageObs","buildValueCoded","buildWhoCriteriaObs","buildReasonForArtObs","stageNumber","ADULT_STAGE_1","PEDAID_STAGE_1","ADULT_STAGE_2","PEDAID_STAGE_2","ADULT_STAGE_3","PEDAID_STAGE_3","ADULT_STAGE_4","PEDAID_STAGE_4","test","getFirstValueCoded","defineComponent","mixins","EncounterMixinVue","staging","showStagingWeightChart","canShowStagingFields","bmiObj","stagingFacts","isChildBearing","stageOneConditions","whoStage","watch","ready","handler","this","patient","getID","getAge","immediate","methods","loadHivConfirmatoryTestType","getBMI","isMale","getAgeInMonths","calculateWeightPercentile","computedValues","encounter","createEncounter","stagingObservations","resolveObs","derivedObservations","Promise","all","obs","saveObservationList","guidelines","findings","matchToGuidelines","isEmpty","ok","updateStagingFacts","curIndex","accum","cur","concat","buildStagingOptions","previouslySelected","map","conceptFinding","concept_id","setWhoStage","setReasonForArt","notAsymptomatic","stageOneC","stage_1_conditions","asymptomatics","i","hasTransferLater","has_transfer_letter","hasStaging","getStagingSummaryField","TT_ART_STAGING_SUMMARY","onload","other","title","hiddenFooterBtns","isANCclient","getSuspendedProgram","getStagingFields","TT_MULTIPLE_YES_NO","Validation","anyEmpty","factID","tag","pregnancy_status","values","yesNoOptions","TT_WEIGHT_CHART","async","getWeightHistory","x","y","weight","TT_MULTIPLE_SELECT","onValue","onStagingCondition","onConditionFalse","charAt","count","substring","buildValueNumber","computedData","isCd4","validateSeries","cd4_available","getBirthdate","getDate","buildValueDate","getLocationName","buildValueText","showKeyboard","isFilterDataViaApi","__exports__","facilities","facility","location_id","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","villages","village","village_id"],"mappings":"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","file":"js/chunk-080d4d01.8d58b177.js","sourcesContent":["import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f))\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { StagingService } from \"@/apps/ART/services/staging_service\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport HisDate from \"@/utils/Date\"\nimport { isEmpty } from \"lodash\"\nimport { CD4_COUNT_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport {\n    getFacilities\n} from '@/utils/HisFormHelpers/LocationFieldOptions'\n\nexport default defineComponent({\n    mixins: [EncounterMixinVue],\n    data: () => ({\n        staging: {} as any,\n        showStagingWeightChart: true,\n        canShowStagingFields: true as boolean,\n        bmiObj: {} as any, \n        stagingFacts : {\n            age: -1 as number,\n            bmi: -1 as number,\n            gender: '' as 'M' | 'F',\n            stage: -1 as number,\n            cd4: -1 as number,\n            date: '' as string,\n            isChildBearing: false as boolean,\n            stageOneConditions: [] as Array<string>,\n            stageTwoConditions: [] as Array<string>,\n            stageThreeConditions: [] as Array<string>,\n            stageFourConditions: [] as Array<string>,\n            reasonForArt: '' as string,\n            testType: '' as string,\n            pregnant: '' as 'Yes' | 'No',\n            breastFeeding: '' as 'Yes' | 'No',\n            selectedCondition: '' as string,\n            selectedConditions: [] as Array<string>,\n            weightPercentile: -1 as number,\n            ageInMonths: -1 as number,\n            cd4Modifier: '' as string,\n            whoStage: '' as string\n        }\n    }),\n    watch: {\n        ready : {\n            handler(v) {\n                if (v) {\n                    this.staging = new StagingService(this.patient.getID(), this.patient.getAge(), this.providerID)\n                }\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        async initStaging(patient: any) {\n            await this.staging.loadHivConfirmatoryTestType()\n            this.bmiObj = await patient.getBMI()\n            this.stagingFacts.age = patient.getAge()\n            this.stagingFacts.bmi = this.bmiObj['index']\n            this.stagingFacts.date = StagingService.getSessionDate()\n            this.stagingFacts.gender = patient.isMale() ? 'M' : 'F' \n            this.stagingFacts.testType = this.staging.getConfirmatoryTestType()\n            this.stagingFacts.ageInMonths = patient.getAgeInMonths()\n            this.stagingFacts.isChildBearing = patient.isChildBearing()\n\n            if (this.staging.isPedaid()) {\n                this.stagingFacts.weightPercentile = await patient.calculateWeightPercentile()\n            }\n        },\n        async submitStaging(computedValues: any) {\n            const encounter = await this.staging.createEncounter()\n\n            if (!encounter) throw 'Unable to create staging encounter'\n\n            const stagingObservations = await this.resolveObs(computedValues, 'staging')\n            const derivedObservations = await Promise.all([\n                this.buildReasonForArtObs(), this.buildWhoStageObs()\n            ])\n\n            const obs = await this.staging.saveObservationList([\n                ...stagingObservations, ...derivedObservations\n            ])\n\n            if (!obs) throw 'Unable to save patient observations'\n        },\n        async onStagingCondition({ label }: Option) {\n            this.stagingFacts.selectedCondition = label\n \n            const guidelines =  this.staging.getAlertGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n\n            if (isEmpty(findings)) \n                return true\n\n            if (findings[0]?.actions && findings[0]?.actions.alert) {\n                const ok = await findings[0]?.actions.alert(this.stagingFacts)\n                return ok ? true : false\n            }\n            return true\n        },\n        getFacilities(filter='') {\n            return getFacilities(filter)\n        },\n        updateStagingFacts() {\n            const conditions = [\n                this.stagingFacts.stageOneConditions,\n                this.stagingFacts.stageTwoConditions,\n                this.stagingFacts.stageThreeConditions,\n                this.stagingFacts.stageFourConditions, \n            ]\n            this.stagingFacts.stage = conditions.reduce(\n                (stage, conditions: string[], curIndex) =>\n                    isEmpty(conditions) ? stage : curIndex + 1\n                , 0)\n            this.stagingFacts.selectedConditions = conditions.reduce(\n                (accum, cur) => accum.concat(cur), []\n            )\n        },\n        buildReasonForArtObs() {\n            return this.staging.buildReasonForArtObs(this.stagingFacts.reasonForArt)\n        },\n        buildWhoStageObs() {\n            return this.staging.buildWhoStageObs(this.stagingFacts.whoStage)\n        },\n        buildStagingOptions(stage: number, previouslySelected=[] as Array<string>) {\n            const guidelines = this.staging.getRecommendedConditionGuidelines()\n\n            return this.staging.getStagingConditions(stage).map((concept: any) => {\n                let disabled = false\n                let description: unknown\n                let isChecked = previouslySelected.includes(concept.name)\n                this.stagingFacts.selectedCondition = concept.name\n\n                const findings = matchToGuidelines(this.stagingFacts, guidelines)\n\n                if (!isEmpty(findings)) {\n                    const conceptFinding = findings[0] //get the first item only\n                    if (conceptFinding?.actions?.isChecked) {\n                        isChecked = true\n                    }\n                    if (conceptFinding?.actions?.disabled) {\n                        disabled = true\n                    }\n                    description = conceptFinding.description\n                }\n                return {\n                    label: concept.name,\n                    value: concept.concept_id,\n                    isChecked,\n                    disabled,\n                    description\n                }\n            })\n        },\n        setWhoStage() {\n            const guidelines = this.staging.getWhoStageGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n            this.stagingFacts.whoStage = findings[0]?.concept || ''\n        },\n        setReasonForArt() {\n            const guidelines = this.staging.getProgramEligibilityGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n            this.stagingFacts.reasonForArt = findings[0]?.concept || ''\n        },\n        notAsymptomatic(f: any) {\n            const stageOneC = f.stage_1_conditions\n            if (stageOneC) {\n                const asymptomatics = stageOneC.filter((i: Option) => {\n                    return i.label.match(/asymptomatic/i) && i.isChecked\n                })\n                return isEmpty(asymptomatics)\n            }\n            return true\n        },\n        hasTransferLater(f: Record<string, any>): boolean {\n            if ('has_transfer_letter' in f) {\n                return f.has_transfer_letter && f.has_transfer_letter.value === 'Yes'\n            }\n            return false\n        },\n        hasStaging(f: Record<string, any>) {\n            // For components that have Optional staging\n            if (this.hasTransferLater(f)) {\n                return true\n            }\n            return this.canShowStagingFields\n        },\n        getStagingSummaryField(helpText=\"Summary\" as string) {\n            return {\n                id: 'summary',\n                helpText,\n                type: FieldType.TT_ART_STAGING_SUMMARY,\n                condition: (f: any) => this.hasStaging(f),\n                onload: () => {\n                    this.setReasonForArt()\n                    this.setWhoStage()\n                },\n                options: () => [\n                    { \n                        label: 'WHO Stage', \n                        value: this.stagingFacts.whoStage,\n                        other: {\n                            type: 'title-section'\n                        }\n                    },\n                    { \n                        label: 'Condition on starting ART', \n                        value: this.stagingFacts.reasonForArt,\n                        other: {\n                            type: 'title-section'\n                        } \n                    },\n                    ...this.stagingFacts.selectedConditions.map((i: string) => ({ label: i, value: i }))\n                ],\n                config: {\n                    title: 'Selected stage defining conditions',\n                    hiddenFooterBtns: [\n                        'Clear'\n                    ]\n                }\n            }\n        },\n        isANCclient() {\n            return StagingService.getSuspendedProgram() === 'ANC'\n        },\n        getStagingFields(): Array<Field> {\n            return [\n                {\n                    id: 'pregnancy_status',\n                    helpText: 'Pregnant / Breastfeeding',\n                    type: FieldType.TT_MULTIPLE_YES_NO,\n                    validation: (v: any) => Validation.anyEmpty(v),\n                    summaryMapValue: (d: Option) => ({ \n                        label: d.label, \n                        value: d.value \n                    }),\n                    computedValue: (data: Array<Option>, f: Record<string, any>) => {\n                        let obs = []\n                        // For ANC clients, mark pregnancy status as 'Yes' always!!\n                        // The assumption here is also that the pregnancy option is not available for selection\n                        if (this.isANCclient() && !this.hasTransferLater(f)) {\n                            this.stagingFacts['pregnant'] = 'Yes' \n                            obs.push(this.staging.buildValueCoded('Is patient pregnant', 'Yes'))\n                        }\n                        obs = obs.concat(data.map(d => {\n                            const  { value, other } = d\n\n                            const factID: 'pregnant' | 'breastFeeding' = other.factID\n\n                            this.stagingFacts[factID] = `${value}`.match(/Yes/i) ? 'Yes' : 'No'\n\n                            return this.staging.buildValueCoded(other.concept, value)\n                        }))\n                        return {\n                            obs,\n                            tag: 'staging'\n                        }\n                    },\n                    options: (f: any) => {\n                        if (!isEmpty(f.pregnancy_status)) {\n                            return f.pregnancy_status\n                        } else {\n                            const options = []\n                            // Hide pregnancy option for ANC clients who are not transferr in\n                            if (!this.isANCclient() || this.hasTransferLater(f)) {\n                                options.push({\n                                    label: 'Pregnant?',\n                                    value: '',\n                                    other: {\n                                        values: this.yesNoOptions(),\n                                        concept: 'Is patient pregnant',\n                                        factID: 'pregnant'\n                                    }\n                                })\n                            }\n                            options.push({\n                                label: 'Breastfeeding?',\n                                value: '',\n                                other: {\n                                    values: this.yesNoOptions(),\n                                    concept: 'Is patient breast feeding',\n                                    factID: 'breastFeeding'\n                                }\n                            })\n                            return options\n                        }\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.stagingFacts.isChildBearing,\n                },\n                {\n                    id: 'patient_weight_chart',\n                    helpText: 'Weight history',\n                    type: FieldType.TT_WEIGHT_CHART,\n                    options: async () => {\n                        let values = await this.patient.getWeightHistory()\n                        values = values.map((d: any) => ({ \n                            x: HisDate.toStandardHisDisplayFormat(d.date), \n                            y: d.weight\n                        }))\n                        return [\n                            {\n                                label: \"Weight for patient\",\n                                value: \"Weight trail\",\n                                other: {\n                                    values,\n                                    age: this.patient.getAge(),\n                                    bmi: this.bmiObj\n                                }\n                            }\n                        ]\n                    },\n                    config: {\n                        hiddenFooterBtns: [\n                            'Clear'\n                        ]\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.showStagingWeightChart\n                },\n                {\n                    id: 'stage_4_conditions',\n                    helpText: 'Stage 4 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(4, this.stagingFacts.stageFourConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageFourConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageFourConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_3_conditions',\n                    helpText: 'Stage 3 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(3, this.stagingFacts.stageThreeConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageThreeConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageThreeConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_2_conditions',\n                    helpText: 'Stage 2 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(2, this.stagingFacts.stageTwoConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Option[]) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageTwoConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageTwoConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_1_conditions',\n                    helpText: 'Stage 1 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    validation: (val: any) => {\n                        if (isEmpty(val) && isEmpty(this.stagingFacts.selectedConditions))\n                            return ['Please provide atleast one staging condition']\n                    },\n                    options: () => this.buildStagingOptions(1, this.stagingFacts.stageOneConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        const data = d.map(i => i.label)\n                        this.stagingFacts.stageOneConditions = data\n                        this.updateStagingFacts()\n                        return {\n                            tag: 'staging',\n                            obs: data.map(i => this.staging.buildWhoCriteriaObs(i))\n                        }\n                    },\n                    condition: (f: any) => this.hasStaging(f),\n                },\n                {\n                    id: 'cd4_available',\n                    helpText: 'Recent CD4 count results available?',\n                    type: FieldType.TT_SELECT,\n                    condition: (f: any) => this.hasStaging(f),\n                    validation: (val: any) => Validation.required(val),\n                    options: () => this.yesNoOptions()\n                },\n                {\n                    id: 'cd4_count',\n                    helpText: 'CD4 Count',\n                    type: FieldType.TT_TEXT,\n                    computedValue: (d: Option) => {\n                        const value = d.value.toString()\n                        const modifier = value.charAt(0)\n                        const count = parseInt(value.substring(1))\n                        return {\n                            tag: 'staging',\n                            modifier,\n                            count,\n                            obs: this.staging.buildValueNumber(\n                                'CD4 count', count, modifier\n                            )\n                        }\n                    },\n                    unload: (d: any, s: any, f: any, computedData: any) => {\n                        const { count, modifier } = computedData['cd4_count']\n                        this.stagingFacts.cd4 = count\n                        this.stagingFacts.cd4Modifier = modifier\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.cd4 = -1\n                        this.stagingFacts.cd4Modifier = ''\n                    },\n                    validation: (val: any) => {\n                        const isCd4 = () => this.staging.cd4CountIsValid(val.value)\n                        return this.validateSeries([\n                            () => Validation.required(val),\n                            () => !isCd4() ? ['Please start with either modifier first: >, <, or ='] : null\n                        ])\n                    },\n                    config: {\n                        customKeyboard: [\n                            CD4_COUNT_PAD_LO,\n                            [\n                                ['Unknown', 'Delete']\n                            ]\n                        ]\n                    },\n                    condition: (f: any) => this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                },\n                ...generateDateFields({\n                    id: 'cd4_result_date',\n                    helpText: 'Cd4 Results',\n                    required: true,\n                    minDate: () => this.patient.getBirthdate(),\n                    maxDate: () => this.staging.getDate(),\n                    condition: (f: any) =>  this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string, isEstimate: boolean) => {\n                        return {\n                            date,\n                            tag: 'staging',\n                            isEstimate,\n                            obs: this.staging.buildValueDate('Cd4 count datetime', date) \n                        }\n                    }\n                }, this.staging.getDate()),\n                {\n                    id: 'location',\n                    helpText: 'CD4 Location',\n                    type: FieldType.TT_SELECT,\n                    defaultValue: () => StagingService.getLocationName(),\n                    computedValue: ({ label }: Option) => ({\n                        tag: 'staging',\n                        obs: this.staging.buildValueText('Cd4 count location', label)\n                    }),\n                    validation: (val: any) => Validation.required(val),\n                    options: (_, filter='') => this.getFacilities(filter),\n                    config: {\n                        showKeyboard: true,\n                        isFilterDataViaApi: true\n                    },\n                    condition: (f: any) => this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                }\n            ]\n        }\n    }\n})\n","import script from \"./StagingMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./StagingMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}